from __future__ import print_function
from scipy import stats
from tabulate import tabulate
import numpy as np

'''
Part I: Cora Dataset with RDN-Boost
'''

# Tushar Scores for Learning Time (s), Inference Time (s), AUC ROC Score (.../1.0), AUC PR Score (.../1.0)
tusharlearning = [32.915,31.041,31.513,33.747,33.920,30.077,28.033,27.372,26.847,27.690,26.243,30.576,26.331,32.417,35.398,26.122,32.949,26.394,31.549,31.982,26.675,31.571,27.649,27.011,32.833]
tusharinference = [2.146,2.254,2.245,2.191,2.015,2.057,2.231,2.262,2.153,2.359,2.206,2.184,2.387,2.221,1.955,2.110,2.202,1.961,2.262,2.216,2.482,2.106,2.102,1.807,2.079]
tusharroc = [0.846560,0.842710,0.841126,0.848733,0.849323,0.845722,0.849106,0.848112,0.845225,0.848702,0.845939,0.846374,0.846343,0.845722,0.846343,0.842368,0.846187,0.848702,0.846498,0.845877,0.846870,0.841747,0.846063,0.846374,0.845038]
tusharpr = [0.975392,0.974795,0.974285,0.975619,0.975816,0.975221,0.975753,0.975645,0.975060,0.975771,0.975214,0.975326,0.975419,0.975221,0.975419,0.974675,0.975285,0.975771,0.975474,0.975278,0.975462,0.974477,0.975344,0.975326,0.975085]

# -e Scores
elearning = [44.861,43.939,42.695,47.721,42.271,45.659,47.668,48.883,43.645,46.782,47.121,44.327,47.161,47.471,43.966,46.215,48.887,46.237,44.489,45.588,43.174,46.081,41.938,46.916,47.952]
einference = [2.175,2.268,2.119,1.989,2.049,2.136,1.965,2.212,2.807,2.193,2.192,1.843,2.137,2.261,1.873,2.211,2.175,2.062,2.229,2.215,2.331,2.108,2.280,2.237,2.290]
eroc = [0.850192,0.845939,0.844883,0.849478,0.846063,0.846374,0.848951,0.845628,0.846374,0.848702,0.845722,0.845318,0.845784,0.846063,0.846684,0.846094,0.842368,0.846467,0.845722,0.846808,0.846125,0.848205,0.846467,0.846187,0.845970]
epr = [0.976101,0.975276,0.974840,0.975872,0.975344,0.975326,0.975861,0.975187,0.975379,0.975771,0.975221,0.975004,0.975252,0.975344,0.975539,0.975251,0.974675,0.975359,0.975221,0.975479,0.975345,0.975680,0.975458,0.975384,0.975311]

# -r Scores
rlearning = [45.128,42.980,38.521,45.642,44.830,44.687,45.939,41.365,41.439,42.864,44.277,46.574,34.099,43.448,41.702,39.384,47.706,39.160,47.385,39.736,45.316,46.320,37.389,39.068,43.956]
rinference = [2.292,2.158,2.105,2.321,2.011,1.881,2.233,2.308,2.288,2.150,2.248,2.182,2.374,2.024,2.314,2.011,2.251,2.202,2.206,2.156,1.925,2.243,2.214,2.312,2.027]
rroc = [0.846249,0.850161,0.850099,0.849540,0.849323,0.846249,0.845535,0.846343,0.848795,0.845722,0.846591,0.842710,0.848671,0.849665,0.845597,0.849323,0.842306,0.846063,0.848547,0.846715,0.845815,0.847926,0.849168,0.845380,0.842058]
rpr = [0.975386,0.976086,0.976069,0.975870,0.975816,0.975386,0.975161,0.975419,0.975805,0.975221,0.975507,0.974795,0.975596,0.975939,0.975154,0.975816,0.974656,0.975344,0.975803,0.975447,0.975255,0.975603,0.975780,0.975117,0.974580]

# -w Scores
wlearning = [38.545,39.984,38.079,38.719,38.504,36.822,38.382,38.185,38.682,40.712,39.530,38.046,44.618,39.899,42.313,40.428,42.508,38.283,39.605,39.206,37.877,37.959,38.666,39.130,37.371]
winference = [2.268,1.931,2.241,2.284,1.948,1.959,2.570,2.330,2.139,2.185,2.234,1.939,2.234,2.174,1.985,2.130,2.366,2.267,2.144,1.901,2.281,2.288,2.378,2.232,2.032]
wroc = [0.846622,0.848609,0.850099,0.849634,0.849944,0.846343,0.845877,0.846963,0.849013,0.849230,0.849385,0.848702,0.846467,0.849572,0.846715,0.848920,0.849665,0.851279,0.845628,0.842710,0.842430,0.849044,0.845628,0.845628,0.845877]
wpr = [0.975414,0.975736,0.976069,0.975905,0.976014,0.975323,0.975252,0.975495,0.975781,0.975781,0.975847,0.975771,0.975359,0.975906,0.975405,0.975713,0.975939,0.976338,0.975187,0.974795,0.974704,0.975894,0.975187,0.975187,0.975278]

# -s Scores
slearning = [31.726,30.756,30.280,33.033,30.395,32.226,31.241,31.520,30.464,31.100,31.400,32.705,34.701,31.517,31.723,33.472,31.887,31.767,32.049,32.702,31.562,33.203,31.134,33.563,32.867]
sinference = [2.312,1.861,2.381,2.006,1.914,2.174,2.225,2.184,2.135,2.136,2.051,1.906,2.274,2.105,2.186,1.832,2.152,2.156,2.189,2.169,2.605,2.074,2.346,2.080,2.218]
sroc = [0.843114,0.846622,0.849478,0.842617,0.844945,0.845815,0.842058,0.846808,0.847802,0.845722,0.842617,0.846560,0.845722,0.846498,0.846560,0.846405,0.846094,0.848702,0.841654,0.845815,0.846374,0.849230,0.846218,0.851497,0.846467]
spr = [0.974721,0.975414,0.975872,0.974762,0.974874,0.975255,0.974566,0.975479,0.975677,0.975221,0.974762,0.975492,0.975221,0.975474,0.975392,0.975341,0.975342,0.975668,0.974442,0.975255,0.975326,0.975781,0.975381,0.976219,0.975359]

learning_stat_sig = stats.f_oneway(tusharlearning, elearning, rlearning, wlearning, slearning)
inference_stat_sig = stats.f_oneway(tusharinference, einference, rinference, winference, sinference)
roc_stat_sig = stats.f_oneway(tusharroc, eroc, rroc, wroc, sroc)
pr_stat_sig = stats.f_oneway(tusharpr, epr, rpr, wpr, spr)

print('\nPart I: Cora Dataset with RDN-Boost\n')
print(tabulate([['Tushar', 
                 str(str(np.mean(tusharlearning)) + ' +- ' + str(np.std(tusharlearning))),
                 str(str(np.mean(tusharinference)) + ' +- ' + str(np.std(tusharinference))),
                 str(str(np.mean(tusharroc)) + ' +- ' + str(np.std(tusharroc))),
                 str(str(np.mean(tusharpr)) + ' +- ' + str(np.std(tusharpr)))],
                ['-e',
                 str(str(np.mean(elearning)) + ' +- ' + str(np.std(elearning))),
                 str(str(np.mean(einference)) + ' +- ' + str(np.std(einference))),
                 str(str(np.mean(eroc)) + ' +- ' + str(np.std(eroc))),
                 str(str(np.mean(epr)) + ' +- ' + str(np.std(epr)))],
                ['-r',
                 str(str(np.mean(rlearning)) + ' +- ' + str(np.std(rlearning))),
                 str(str(np.mean(rinference)) + ' +- ' + str(np.std(rinference))),
                 str(str(np.mean(rroc)) + ' +- ' + str(np.std(rroc))),
                 str(str(np.mean(rpr)) + ' +- ' + str(np.std(rpr)))],
                ['-w',
                 str(str(np.mean(wlearning)) + ' +- ' + str(np.std(wlearning))),
                 str(str(np.mean(winference)) + ' +- ' + str(np.std(winference))),
                 str(str(np.mean(wroc)) + ' +- ' + str(np.std(wroc))),
                 str(str(np.mean(wpr)) + ' +- ' + str(np.std(wpr)))],
                ['-s',
                 str(str(np.mean(slearning)) + ' +- ' + str(np.std(slearning))),
                 str(str(np.mean(sinference)) + ' +- ' + str(np.std(sinference))),
                 str(str(np.mean(sroc)) + ' +- ' + str(np.std(sroc))),
                 str(str(np.mean(spr)) + ' +- ' + str(np.std(spr)))],
                
                ['-----', '-----', '-----', '-----', '-----'],
                ['pvalues',
                 str(learning_stat_sig[1]),
                 str(inference_stat_sig[1]),
                 str(roc_stat_sig[1]),
                 str(pr_stat_sig[1])]],
               headers=['algorithm', 'Training (s)', 'Testing (s)', 'AUC ROC', 'AUC PR'],
               tablefmt='orgtbl'))
#tablefmt='latex'
